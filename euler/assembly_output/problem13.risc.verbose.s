	.file	"problem13.c"
	.option pic
# GNU C17 (Ubuntu 11.4.0-1ubuntu1~22.04) version 11.4.0 (riscv64-linux-gnu)
#	compiled by GNU C version 11.4.0, GMP version 6.2.1, MPFR version 4.1.0, MPC version 1.2.1, isl version isl-0.24-GMP

# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
# options passed: -mabi=lp64d -misa-spec=2.2 -march=rv64imafdc -fstack-protector-strong
	.text
	.section	.rodata
	.align	3
.LC0:
	.string	"37107287533902102798797998220837590246510135740250"
	.zero	49
	.string	"46376937677490009712648124896970078050417018260538"
	.zero	49
	.string	"74324986199524741059474233309513058123726617309629"
	.zero	49
	.string	"91942213363574161572522430563301811072406154908250"
	.zero	49
	.string	"23067588207539346171171980310421047513778063246676"
	.zero	49
	.string	"89261670696623633820136378418383684178734361726757"
	.zero	49
	.string	"28112879812849979408065481931592621691275889832738"
	.zero	49
	.string	"44274228917432520321923589422876796487670272189318"
	.zero	49
	.string	"47451445736001306439091167216856844588711603153276"
	.zero	49
	.string	"70386486105843025439939619828917593665686757934951"
	.zero	49
	.string	"62176457141856560629502157223196586755079324193331"
	.zero	49
	.string	"64906352462741904929101432445813822663347944758178"
	.zero	49
	.string	"92575867718337217661963751590579239728245598838407"
	.zero	49
	.string	"58203565325359399008402633568948830189458628227828"
	.zero	49
	.string	"80181199384826282014278194139940567587151170094390"
	.zero	49
	.string	"35398664372827112653829987240784473053190104293586"
	.zero	49
	.string	"86515506006295864861532075273371959191420517255829"
	.zero	49
	.string	"71693888707715466499115593487603532921714970056938"
	.zero	49
	.string	"54370070576826684624621495650076471787294438377604"
	.zero	49
	.string	"53282654108756828443191190634694037855217779295145"
	.zero	49
	.string	"36123272525000296071075082563815656710885258350721"
	.zero	49
	.string	"45876576172410976447339110607218265236877223636045"
	.zero	49
	.string	"17423706905851860660448207621209813287860733969412"
	.zero	49
	.string	"81142660418086830619328460811191061556940512689692"
	.zero	49
	.string	"51934325451728388641918047049293215058642563049483"
	.zero	49
	.string	"62467221648435076201727918039944693004732956340691"
	.zero	49
	.string	"15732444386908125794514089057706229429197107928209"
	.zero	49
	.string	"55037687525678773091862540744969844508330393682126"
	.zero	49
	.string	"18336384825330154686196124348767681297534375946515"
	.zero	49
	.string	"80386287592878490201521685554828717201219257766954"
	.zero	49
	.string	"78182833757993103614740356856449095527097864797581"
	.zero	49
	.string	"16726320100436897842553539920931837441497806860984"
	.zero	49
	.string	"48403098129077791799088218795327364475675590848030"
	.zero	49
	.string	"87086987551392711854517078544161852424320693150332"
	.zero	49
	.string	"59959406895756536782107074926966537676326235447210"
	.zero	49
	.string	"69793950679652694742597709739166693763042633987085"
	.zero	49
	.string	"41052684708299085211399427365734116182760315001271"
	.zero	49
	.string	"65378607361501080857009149939512557028198746004375"
	.zero	49
	.string	"35829035317434717326932123578154982629742552737307"
	.zero	49
	.string	"94953759765105305946966067683156574377167401875275"
	.zero	49
	.string	"88902802571733229619176668713819931811048770190271"
	.zero	49
	.string	"25267680276078003013678680992525463401061632866526"
	.zero	49
	.string	"36270218540497705585629946580636237993140746255962"
	.zero	49
	.string	"24074486908231174977792365466257246923322810917141"
	.zero	49
	.string	"91430288197103288597806669760892938638285025333403"
	.zero	49
	.string	"34413065578016127815921815005561868836468420090470"
	.zero	49
	.string	"23053081172816430487623791969842487255036638784583"
	.zero	49
	.string	"11487696932154902810424020138335124462181441773470"
	.zero	49
	.string	"63783299490636259666498587618221225225512486764533"
	.zero	49
	.string	"67720186971698544312419572409913959008952310058822"
	.zero	49
	.string	"95548255300263520781532296796249481641953868218774"
	.zero	49
	.string	"76085327132285723110424803456124867697064507995236"
	.zero	49
	.string	"37774242535411291684276865538926205024910326572967"
	.zero	49
	.string	"23701913275725675285653248258265463092207058596522"
	.zero	49
	.string	"29798860272258331913126375147341994889534765745501"
	.zero	49
	.string	"18495701454879288984856827726077713721403798879715"
	.zero	49
	.string	"38298203783031473527721580348144513491373226651381"
	.zero	49
	.string	"34829543829199918180278916522431027392251122869539"
	.zero	49
	.string	"40957953066405232632538044100059654939159879593635"
	.zero	49
	.string	"29746152185502371307642255121183693803580388584903"
	.zero	49
	.string	"41698116222072977186158236678424689157993532961922"
	.zero	49
	.string	"62467957194401269043877107275048102390895523597457"
	.zero	49
	.string	"23189706772547915061505504953922979530901129967519"
	.zero	49
	.string	"86188088225875314529584099251203829009407770775672"
	.zero	49
	.string	"11306739708304724483816533873502340845647058077308"
	.zero	49
	.string	"82959174767140363198008187129011875491310547126581"
	.zero	49
	.string	"97623331044818386269515456334926366572897563400500"
	.zero	49
	.string	"42846280183517070527831839425882145521227251250327"
	.zero	49
	.string	"55121603546981200581762165212827652751691296897789"
	.zero	49
	.string	"32238195734329339946437501907836945765883352399886"
	.zero	49
	.string	"75506164965184775180738168837861091527357929701337"
	.zero	49
	.string	"62177842752192623401942399639168044983993173312731"
	.zero	49
	.string	"32924185707147349566916674687634660915035914677504"
	.zero	49
	.string	"99518671430235219628894890102423325116913619626622"
	.zero	49
	.string	"73267460800591547471830798392868535206946944540724"
	.zero	49
	.string	"76841822524674417161514036427982273348055556214818"
	.zero	49
	.string	"97142617910342598647204516893989422179826088076852"
	.zero	49
	.string	"87783646182799346313767754307809363333018982642090"
	.zero	49
	.string	"10848802521674670883215120185883543223812876952786"
	.zero	49
	.string	"71329612474782464538636993009049310363619763878039"
	.zero	49
	.string	"62184073572399794223406235393808339651327408011116"
	.zero	49
	.string	"66627891981488087797941876876144230030984490851411"
	.zero	49
	.string	"60661826293682836764744779239180335110989069790714"
	.zero	49
	.string	"85786944089552990653640447425576083659976645795096"
	.zero	49
	.string	"66024396409905389607120198219976047599490197230297"
	.zero	49
	.string	"64913982680032973156037120041377903785566085089252"
	.zero	49
	.string	"16730939319872750275468906903707539413042652315011"
	.zero	49
	.string	"94809377245048795150954100921645863754710598436791"
	.zero	49
	.string	"78639167021187492431995700641917969777599028300699"
	.zero	49
	.string	"15368713711936614952811305876380278410754449733078"
	.zero	49
	.string	"40789923115535562561142322423255033685442488917353"
	.zero	49
	.string	"44889911501440648020369068063960672322193204149535"
	.zero	49
	.string	"41503128880339536053299340368006977710650566631954"
	.zero	49
	.string	"81234880673210146739058568557934581403627822703280"
	.zero	49
	.string	"82616570773948327592232845941706525094512325230608"
	.zero	49
	.string	"22918802058777319719839450180888072429661980811197"
	.zero	49
	.string	"77158542502016545090413245809786882778948721859617"
	.zero	49
	.string	"72107838435069186155435662884062257473692284509516"
	.zero	49
	.string	"20849603980134001723930671666823555245252804609722"
	.zero	49
	.string	"53503534226472524250874054075591789781264330331690"
	.zero	49
	.text
	.align	1
	.globl	main
	.type	main, @function
main:
	addi	sp,sp,-1904	#,,
	sd	ra,1896(sp)	#,
	sd	s0,1888(sp)	#,
	sd	s1,1880(sp)	#,
	addi	s0,sp,1904	#,,
	li	t0,-8192		#,
	add	sp,sp,t0	#,,
# problem13.c:13: {
	la	a5,__stack_chk_guard		# tmp76,
	ld	a4, 0(a5)	# tmp147, __stack_chk_guard
	sd	a4, -40(s0)	# tmp147, D.3999
	li	a4, 0	# tmp147
# problem13.c:14:   char digits[][N] = {
	li	a5,-8192		# tmp77,
	addi	a5,a5,-32	#, tmp151, tmp77
	add	a5,a5,s0	#, tmp78, tmp151
	lla	a3,.LC0	# tmp79,
	addi	a4,a5,-1816	#, tmp80, tmp78
	li	a5,8192		# tmp83,
	addi	a5,a5,1808	#, tmp82, tmp83
	mv	a2,a5	#, tmp82
	mv	a1,a3	#, tmp81
	mv	a0,a4	#, tmp80
	call	memcpy@plt	#
# problem13.c:121:   mpz_init_set_ui(sum, 0);
	li	a5,-8192		# tmp87,
	addi	a5,a5,-1848	#, tmp86, tmp87
	addi	a5,a5,-32	#, tmp152, tmp86
	add	a5,a5,s0	#, tmp85, tmp152
	li	a1,0		#,
	mv	a0,a5	#, tmp85
	call	__gmpz_init_set_ui@plt	#
# problem13.c:122:   mpz_init(t);
	li	a5,-8192		# tmp90,
	addi	a5,a5,-1832	#, tmp89, tmp90
	addi	a5,a5,-32	#, tmp153, tmp89
	add	a5,a5,s0	#, tmp88, tmp153
	mv	a0,a5	#, tmp88
	call	__gmpz_init@plt	#
# problem13.c:123:   for (i = 0; i < N; i++) {
	li	a5,-8192		# tmp91,
	addi	a5,a5,-32	#, tmp154, tmp91
	add	a5,a5,s0	#, tmp92, tmp154
	sw	zero,-1860(a5)	#, i
# problem13.c:123:   for (i = 0; i < N; i++) {
	j	.L2		#
.L3:
# problem13.c:124:     mpz_set_str(t, digits[i], 10);
	li	a5,-8192		# tmp95,
	addi	a5,a5,-1816	#, tmp94, tmp95
	addi	a5,a5,-32	#, tmp155, tmp94
	add	a4,a5,s0	#, tmp93, tmp155
	li	a5,-8192		# tmp96,
	addi	a5,a5,-32	#, tmp156, tmp96
	add	a5,a5,s0	#, tmp97, tmp156
	lw	a3,-1860(a5)		# tmp98, i
	li	a5,100		# tmp100,
	mul	a5,a3,a5	# tmp99, tmp98, tmp100
	add	a4,a4,a5	# tmp99, _1, tmp93
# problem13.c:124:     mpz_set_str(t, digits[i], 10);
	li	a5,-8192		# tmp103,
	addi	a5,a5,-1832	#, tmp102, tmp103
	addi	a5,a5,-32	#, tmp157, tmp102
	add	a5,a5,s0	#, tmp101, tmp157
	li	a2,10		#,
	mv	a1,a4	#, _1
	mv	a0,a5	#, tmp101
	call	__gmpz_set_str@plt	#
# problem13.c:125:     mpz_add(sum, sum, t);
	li	a5,-8192		# tmp106,
	addi	a5,a5,-1832	#, tmp105, tmp106
	addi	a5,a5,-32	#, tmp158, tmp105
	add	a3,a5,s0	#, tmp104, tmp158
	li	a5,-8192		# tmp109,
	addi	a5,a5,-1848	#, tmp108, tmp109
	addi	a5,a5,-32	#, tmp159, tmp108
	add	a4,a5,s0	#, tmp107, tmp159
	li	a5,-8192		# tmp112,
	addi	a5,a5,-1848	#, tmp111, tmp112
	addi	a5,a5,-32	#, tmp160, tmp111
	add	a5,a5,s0	#, tmp110, tmp160
	mv	a2,a3	#, tmp104
	mv	a1,a4	#, tmp107
	mv	a0,a5	#, tmp110
	call	__gmpz_add@plt	#
# problem13.c:123:   for (i = 0; i < N; i++) {
	li	a5,-8192		# tmp113,
	addi	a5,a5,-32	#, tmp161, tmp113
	add	a5,a5,s0	#, tmp114, tmp161
	li	a4,-8192		# tmp115,
	addi	a4,a4,-32	#, tmp162, tmp115
	add	a4,a4,s0	#, tmp116, tmp162
	lw	a4,-1860(a4)		# tmp119, i
	addiw	a4,a4,1	#, tmp117, tmp118
	sw	a4,-1860(a5)	# tmp117, i
.L2:
# problem13.c:123:   for (i = 0; i < N; i++) {
	li	a5,-8192		# tmp120,
	addi	a5,a5,-32	#, tmp163, tmp120
	add	a5,a5,s0	#, tmp121, tmp163
	lw	a5,-1860(a5)		# tmp123, i
	sext.w	a4,a5	# tmp124, tmp122
	li	a5,99		# tmp125,
	ble	a4,a5,.L3	#, tmp124, tmp125,
# problem13.c:128:   str = mpz_get_str(NULL, 10, sum);
	li	a5,-8192		# tmp126,
	addi	a5,a5,-32	#, tmp164, tmp126
	add	s1,a5,s0	#, tmp127, tmp164
	li	a5,-8192		# tmp130,
	addi	a5,a5,-1848	#, tmp129, tmp130
	addi	a5,a5,-32	#, tmp165, tmp129
	add	a5,a5,s0	#, tmp128, tmp165
	mv	a2,a5	#, tmp128
	li	a1,10		#,
	li	a0,0		#,
	call	__gmpz_get_str@plt	#
	sd	a0,-1856(s1)	#, str
# problem13.c:129:   str[10] = 0;
	li	a5,-8192		# tmp131,
	addi	a5,a5,-32	#, tmp166, tmp131
	add	a5,a5,s0	#, tmp132, tmp166
	ld	a5,-1856(a5)		# tmp133, str
	addi	a5,a5,10	#, _2, tmp133
# problem13.c:129:   str[10] = 0;
	sb	zero,0(a5)	#, *_2
# problem13.c:130:   puts(str);
	li	a5,-8192		# tmp134,
	addi	a5,a5,-32	#, tmp167, tmp134
	add	a5,a5,s0	#, tmp135, tmp167
	ld	a0,-1856(a5)		#, str
	call	puts@plt	#
# problem13.c:132:   free(str);
	li	a5,-8192		# tmp136,
	addi	a5,a5,-32	#, tmp168, tmp136
	add	a5,a5,s0	#, tmp137, tmp168
	ld	a0,-1856(a5)		#, str
	call	free@plt	#
# problem13.c:133:   mpz_clear(sum);
	li	a5,-8192		# tmp140,
	addi	a5,a5,-1848	#, tmp139, tmp140
	addi	a5,a5,-32	#, tmp169, tmp139
	add	a5,a5,s0	#, tmp138, tmp169
	mv	a0,a5	#, tmp138
	call	__gmpz_clear@plt	#
# problem13.c:134:   mpz_clear(t);
	li	a5,-8192		# tmp143,
	addi	a5,a5,-1832	#, tmp142, tmp143
	addi	a5,a5,-32	#, tmp170, tmp142
	add	a5,a5,s0	#, tmp141, tmp170
	mv	a0,a5	#, tmp141
	call	__gmpz_clear@plt	#
# problem13.c:136:   return 0;
	li	a5,0		# _17,
# problem13.c:137: }
	mv	a4,a5	# <retval>, _17
	la	a5,__stack_chk_guard		# tmp145,
	ld	a3, -40(s0)	# tmp148, D.3999
	ld	a5, 0(a5)	# tmp146, __stack_chk_guard
	xor	a5, a3, a5	# tmp146, tmp148
	li	a3, 0	# tmp148
	beq	a5,zero,.L5	#, tmp146,,
	call	__stack_chk_fail@plt	#
.L5:
	mv	a0,a4	#, <retval>
	li	t0,8192		#,
	add	sp,sp,t0	#,,
	ld	ra,1896(sp)		#,
	ld	s0,1888(sp)		#,
	ld	s1,1880(sp)		#,
	addi	sp,sp,1904	#,,
	jr	ra		#
	.size	main, .-main
	.ident	"GCC: (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0"
	.section	.note.GNU-stack,"",@progbits
